plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1" apply false
    id "net.kyori.indra.licenser.spotless" version "3.1.3" apply false
}

group "dev.architectury"

def runNumber = System.getenv("GITHUB_RUN_NUMBER") ?: "9999"

version = base_version + "." + runNumber

logger.lifecycle(":building architectury loom runtime v${version}")

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'net.kyori.indra.licenser.spotless'

    group = rootProject.group
    version = rootProject.version

    java {
        withSourcesJar()
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        it.options.release = 8
    }

    repositories {
        maven { url "https://maven.architectury.dev/" }
        maven { url "https://maven.fabricmc.net/" }
        maven {
            url "https://maven.minecraftforge.net/"
            metadataSources {
                artifact()
            }
        }
        mavenCentral()
    }

    configurations {
        include
        compileOnly.extendsFrom include
    }

    indraSpotlessLicenser {
        licenseHeaderFile rootProject.file("HEADER")
        newLine true
        property 'name', 'architectury'
        property 'year', '2020, 2021'
    }

    jar {
        archiveClassifier = "raw"
    }

    shadowJar {
        configurations = [project.configurations.include]
        archiveClassifier = ""
    }

    assemble.dependsOn shadowJar

    publishing {
        publications {
            main(MavenPublication) {
                shadow.component it
                artifact sourcesJar
            }
        }

        repositories {
            if (System.getenv("MAVEN_PASS") != null) {
                maven {
                    url = "https://deploy.shedaniel.me/"
                    credentials {
                        username = "shedaniel"
                        password = System.getenv("MAVEN_PASS")
                    }
                }
            }
        }
    }
}
